// Code generated by ogen, DO NOT EDIT.

package outline

// Ref: #/components/schemas/AccessKey
type AccessKey struct {
	ID        string    `json:"id"`
	Name      OptString `json:"name"`
	Password  OptString `json:"password"`
	Port      OptInt    `json:"port"`
	Method    OptString `json:"method"`
	AccessUrl OptString `json:"accessUrl"`
}

// GetID returns the value of ID.
func (s *AccessKey) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *AccessKey) GetName() OptString {
	return s.Name
}

// GetPassword returns the value of Password.
func (s *AccessKey) GetPassword() OptString {
	return s.Password
}

// GetPort returns the value of Port.
func (s *AccessKey) GetPort() OptInt {
	return s.Port
}

// GetMethod returns the value of Method.
func (s *AccessKey) GetMethod() OptString {
	return s.Method
}

// GetAccessUrl returns the value of AccessUrl.
func (s *AccessKey) GetAccessUrl() OptString {
	return s.AccessUrl
}

// SetID sets the value of ID.
func (s *AccessKey) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *AccessKey) SetName(val OptString) {
	s.Name = val
}

// SetPassword sets the value of Password.
func (s *AccessKey) SetPassword(val OptString) {
	s.Password = val
}

// SetPort sets the value of Port.
func (s *AccessKey) SetPort(val OptInt) {
	s.Port = val
}

// SetMethod sets the value of Method.
func (s *AccessKey) SetMethod(val OptString) {
	s.Method = val
}

// SetAccessUrl sets the value of AccessUrl.
func (s *AccessKey) SetAccessUrl(val OptString) {
	s.AccessUrl = val
}

func (*AccessKey) accessKeysIDGetRes() {}

type AccessKeysGetOK struct {
	AccessKeys []AccessKey `json:"accessKeys"`
}

// GetAccessKeys returns the value of AccessKeys.
func (s *AccessKeysGetOK) GetAccessKeys() []AccessKey {
	return s.AccessKeys
}

// SetAccessKeys sets the value of AccessKeys.
func (s *AccessKeysGetOK) SetAccessKeys(val []AccessKey) {
	s.AccessKeys = val
}

// AccessKeysIDDataLimitDeleteNoContent is response for AccessKeysIDDataLimitDelete operation.
type AccessKeysIDDataLimitDeleteNoContent struct{}

func (*AccessKeysIDDataLimitDeleteNoContent) accessKeysIDDataLimitDeleteRes() {}

// AccessKeysIDDataLimitDeleteNotFound is response for AccessKeysIDDataLimitDelete operation.
type AccessKeysIDDataLimitDeleteNotFound struct{}

func (*AccessKeysIDDataLimitDeleteNotFound) accessKeysIDDataLimitDeleteRes() {}

// AccessKeysIDDataLimitPutBadRequest is response for AccessKeysIDDataLimitPut operation.
type AccessKeysIDDataLimitPutBadRequest struct{}

func (*AccessKeysIDDataLimitPutBadRequest) accessKeysIDDataLimitPutRes() {}

// AccessKeysIDDataLimitPutNoContent is response for AccessKeysIDDataLimitPut operation.
type AccessKeysIDDataLimitPutNoContent struct{}

func (*AccessKeysIDDataLimitPutNoContent) accessKeysIDDataLimitPutRes() {}

// AccessKeysIDDataLimitPutNotFound is response for AccessKeysIDDataLimitPut operation.
type AccessKeysIDDataLimitPutNotFound struct{}

func (*AccessKeysIDDataLimitPutNotFound) accessKeysIDDataLimitPutRes() {}

// AccessKeysIDDeleteNoContent is response for AccessKeysIDDelete operation.
type AccessKeysIDDeleteNoContent struct{}

func (*AccessKeysIDDeleteNoContent) accessKeysIDDeleteRes() {}

type AccessKeysIDDeleteNotFound struct {
	Code    OptString `json:"code"`
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *AccessKeysIDDeleteNotFound) GetCode() OptString {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *AccessKeysIDDeleteNotFound) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *AccessKeysIDDeleteNotFound) SetCode(val OptString) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *AccessKeysIDDeleteNotFound) SetMessage(val OptString) {
	s.Message = val
}

func (*AccessKeysIDDeleteNotFound) accessKeysIDDeleteRes() {}

type AccessKeysIDGetNotFound struct {
	Code    OptString `json:"code"`
	Message OptString `json:"message"`
}

// GetCode returns the value of Code.
func (s *AccessKeysIDGetNotFound) GetCode() OptString {
	return s.Code
}

// GetMessage returns the value of Message.
func (s *AccessKeysIDGetNotFound) GetMessage() OptString {
	return s.Message
}

// SetCode sets the value of Code.
func (s *AccessKeysIDGetNotFound) SetCode(val OptString) {
	s.Code = val
}

// SetMessage sets the value of Message.
func (s *AccessKeysIDGetNotFound) SetMessage(val OptString) {
	s.Message = val
}

func (*AccessKeysIDGetNotFound) accessKeysIDGetRes() {}

// AccessKeysIDNamePutNoContent is response for AccessKeysIDNamePut operation.
type AccessKeysIDNamePutNoContent struct{}

func (*AccessKeysIDNamePutNoContent) accessKeysIDNamePutRes() {}

// AccessKeysIDNamePutNotFound is response for AccessKeysIDNamePut operation.
type AccessKeysIDNamePutNotFound struct{}

func (*AccessKeysIDNamePutNotFound) accessKeysIDNamePutRes() {}

type AccessKeysIDNamePutReq struct {
	Name OptString `json:"name"`
}

// GetName returns the value of Name.
func (s *AccessKeysIDNamePutReq) GetName() OptString {
	return s.Name
}

// SetName sets the value of Name.
func (s *AccessKeysIDNamePutReq) SetName(val OptString) {
	s.Name = val
}

type AccessKeysIDPutReq struct {
	Name     OptString    `json:"name"`
	Method   OptString    `json:"method"`
	Password OptString    `json:"password"`
	Port     OptInt       `json:"port"`
	Limit    OptDataLimit `json:"limit"`
}

// GetName returns the value of Name.
func (s *AccessKeysIDPutReq) GetName() OptString {
	return s.Name
}

// GetMethod returns the value of Method.
func (s *AccessKeysIDPutReq) GetMethod() OptString {
	return s.Method
}

// GetPassword returns the value of Password.
func (s *AccessKeysIDPutReq) GetPassword() OptString {
	return s.Password
}

// GetPort returns the value of Port.
func (s *AccessKeysIDPutReq) GetPort() OptInt {
	return s.Port
}

// GetLimit returns the value of Limit.
func (s *AccessKeysIDPutReq) GetLimit() OptDataLimit {
	return s.Limit
}

// SetName sets the value of Name.
func (s *AccessKeysIDPutReq) SetName(val OptString) {
	s.Name = val
}

// SetMethod sets the value of Method.
func (s *AccessKeysIDPutReq) SetMethod(val OptString) {
	s.Method = val
}

// SetPassword sets the value of Password.
func (s *AccessKeysIDPutReq) SetPassword(val OptString) {
	s.Password = val
}

// SetPort sets the value of Port.
func (s *AccessKeysIDPutReq) SetPort(val OptInt) {
	s.Port = val
}

// SetLimit sets the value of Limit.
func (s *AccessKeysIDPutReq) SetLimit(val OptDataLimit) {
	s.Limit = val
}

type AccessKeysPostReq struct {
	Name     OptString    `json:"name"`
	Method   OptString    `json:"method"`
	Password OptString    `json:"password"`
	Port     OptInt       `json:"port"`
	Limit    OptDataLimit `json:"limit"`
}

// GetName returns the value of Name.
func (s *AccessKeysPostReq) GetName() OptString {
	return s.Name
}

// GetMethod returns the value of Method.
func (s *AccessKeysPostReq) GetMethod() OptString {
	return s.Method
}

// GetPassword returns the value of Password.
func (s *AccessKeysPostReq) GetPassword() OptString {
	return s.Password
}

// GetPort returns the value of Port.
func (s *AccessKeysPostReq) GetPort() OptInt {
	return s.Port
}

// GetLimit returns the value of Limit.
func (s *AccessKeysPostReq) GetLimit() OptDataLimit {
	return s.Limit
}

// SetName sets the value of Name.
func (s *AccessKeysPostReq) SetName(val OptString) {
	s.Name = val
}

// SetMethod sets the value of Method.
func (s *AccessKeysPostReq) SetMethod(val OptString) {
	s.Method = val
}

// SetPassword sets the value of Password.
func (s *AccessKeysPostReq) SetPassword(val OptString) {
	s.Password = val
}

// SetPort sets the value of Port.
func (s *AccessKeysPostReq) SetPort(val OptInt) {
	s.Port = val
}

// SetLimit sets the value of Limit.
func (s *AccessKeysPostReq) SetLimit(val OptDataLimit) {
	s.Limit = val
}

// Ref: #/components/schemas/DataLimit
type DataLimit struct {
	Bytes OptInt `json:"bytes"`
}

// GetBytes returns the value of Bytes.
func (s *DataLimit) GetBytes() OptInt {
	return s.Bytes
}

// SetBytes sets the value of Bytes.
func (s *DataLimit) SetBytes(val OptInt) {
	s.Bytes = val
}

// ExperimentalAccessKeyDataLimitDeleteNoContent is response for ExperimentalAccessKeyDataLimitDelete operation.
type ExperimentalAccessKeyDataLimitDeleteNoContent struct{}

// ExperimentalAccessKeyDataLimitPutBadRequest is response for ExperimentalAccessKeyDataLimitPut operation.
type ExperimentalAccessKeyDataLimitPutBadRequest struct{}

func (*ExperimentalAccessKeyDataLimitPutBadRequest) experimentalAccessKeyDataLimitPutRes() {}

// ExperimentalAccessKeyDataLimitPutNoContent is response for ExperimentalAccessKeyDataLimitPut operation.
type ExperimentalAccessKeyDataLimitPutNoContent struct{}

func (*ExperimentalAccessKeyDataLimitPutNoContent) experimentalAccessKeyDataLimitPutRes() {}

// ExperimentalAsnMetricsEnabledPutBadRequest is response for ExperimentalAsnMetricsEnabledPut operation.
type ExperimentalAsnMetricsEnabledPutBadRequest struct{}

func (*ExperimentalAsnMetricsEnabledPutBadRequest) experimentalAsnMetricsEnabledPutRes() {}

// ExperimentalAsnMetricsEnabledPutNoContent is response for ExperimentalAsnMetricsEnabledPut operation.
type ExperimentalAsnMetricsEnabledPutNoContent struct{}

func (*ExperimentalAsnMetricsEnabledPutNoContent) experimentalAsnMetricsEnabledPutRes() {}

type ExperimentalAsnMetricsEnabledPutReq struct {
	AsnMetricsEnabled OptBool `json:"asnMetricsEnabled"`
}

// GetAsnMetricsEnabled returns the value of AsnMetricsEnabled.
func (s *ExperimentalAsnMetricsEnabledPutReq) GetAsnMetricsEnabled() OptBool {
	return s.AsnMetricsEnabled
}

// SetAsnMetricsEnabled sets the value of AsnMetricsEnabled.
func (s *ExperimentalAsnMetricsEnabledPutReq) SetAsnMetricsEnabled(val OptBool) {
	s.AsnMetricsEnabled = val
}

type MetricsEnabledGetOK struct {
	MetricsEnabled OptBool `json:"metricsEnabled"`
}

// GetMetricsEnabled returns the value of MetricsEnabled.
func (s *MetricsEnabledGetOK) GetMetricsEnabled() OptBool {
	return s.MetricsEnabled
}

// SetMetricsEnabled sets the value of MetricsEnabled.
func (s *MetricsEnabledGetOK) SetMetricsEnabled(val OptBool) {
	s.MetricsEnabled = val
}

// MetricsEnabledPutBadRequest is response for MetricsEnabledPut operation.
type MetricsEnabledPutBadRequest struct{}

func (*MetricsEnabledPutBadRequest) metricsEnabledPutRes() {}

// MetricsEnabledPutNoContent is response for MetricsEnabledPut operation.
type MetricsEnabledPutNoContent struct{}

func (*MetricsEnabledPutNoContent) metricsEnabledPutRes() {}

type MetricsEnabledPutReq struct {
	MetricsEnabled OptBool `json:"metricsEnabled"`
}

// GetMetricsEnabled returns the value of MetricsEnabled.
func (s *MetricsEnabledPutReq) GetMetricsEnabled() OptBool {
	return s.MetricsEnabled
}

// SetMetricsEnabled sets the value of MetricsEnabled.
func (s *MetricsEnabledPutReq) SetMetricsEnabled(val OptBool) {
	s.MetricsEnabled = val
}

type MetricsTransferGetOK struct {
	BytesTransferredByUserId OptMetricsTransferGetOKBytesTransferredByUserId `json:"bytesTransferredByUserId"`
}

// GetBytesTransferredByUserId returns the value of BytesTransferredByUserId.
func (s *MetricsTransferGetOK) GetBytesTransferredByUserId() OptMetricsTransferGetOKBytesTransferredByUserId {
	return s.BytesTransferredByUserId
}

// SetBytesTransferredByUserId sets the value of BytesTransferredByUserId.
func (s *MetricsTransferGetOK) SetBytesTransferredByUserId(val OptMetricsTransferGetOKBytesTransferredByUserId) {
	s.BytesTransferredByUserId = val
}

type MetricsTransferGetOKBytesTransferredByUserId map[string]int

func (s *MetricsTransferGetOKBytesTransferredByUserId) init() MetricsTransferGetOKBytesTransferredByUserId {
	m := *s
	if m == nil {
		m = map[string]int{}
		*s = m
	}
	return m
}

// NamePutBadRequest is response for NamePut operation.
type NamePutBadRequest struct{}

func (*NamePutBadRequest) namePutRes() {}

// NamePutNoContent is response for NamePut operation.
type NamePutNoContent struct{}

func (*NamePutNoContent) namePutRes() {}

type NamePutReq struct {
	Name OptString `json:"name"`
}

// GetName returns the value of Name.
func (s *NamePutReq) GetName() OptString {
	return s.Name
}

// SetName sets the value of Name.
func (s *NamePutReq) SetName(val OptString) {
	s.Name = val
}

// NewOptAccessKeysIDPutReq returns new OptAccessKeysIDPutReq with value set to v.
func NewOptAccessKeysIDPutReq(v AccessKeysIDPutReq) OptAccessKeysIDPutReq {
	return OptAccessKeysIDPutReq{
		Value: v,
		Set:   true,
	}
}

// OptAccessKeysIDPutReq is optional AccessKeysIDPutReq.
type OptAccessKeysIDPutReq struct {
	Value AccessKeysIDPutReq
	Set   bool
}

// IsSet returns true if OptAccessKeysIDPutReq was set.
func (o OptAccessKeysIDPutReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessKeysIDPutReq) Reset() {
	var v AccessKeysIDPutReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessKeysIDPutReq) SetTo(v AccessKeysIDPutReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessKeysIDPutReq) Get() (v AccessKeysIDPutReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessKeysIDPutReq) Or(d AccessKeysIDPutReq) AccessKeysIDPutReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptAccessKeysPostReq returns new OptAccessKeysPostReq with value set to v.
func NewOptAccessKeysPostReq(v AccessKeysPostReq) OptAccessKeysPostReq {
	return OptAccessKeysPostReq{
		Value: v,
		Set:   true,
	}
}

// OptAccessKeysPostReq is optional AccessKeysPostReq.
type OptAccessKeysPostReq struct {
	Value AccessKeysPostReq
	Set   bool
}

// IsSet returns true if OptAccessKeysPostReq was set.
func (o OptAccessKeysPostReq) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptAccessKeysPostReq) Reset() {
	var v AccessKeysPostReq
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptAccessKeysPostReq) SetTo(v AccessKeysPostReq) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptAccessKeysPostReq) Get() (v AccessKeysPostReq, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptAccessKeysPostReq) Or(d AccessKeysPostReq) AccessKeysPostReq {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptDataLimit returns new OptDataLimit with value set to v.
func NewOptDataLimit(v DataLimit) OptDataLimit {
	return OptDataLimit{
		Value: v,
		Set:   true,
	}
}

// OptDataLimit is optional DataLimit.
type OptDataLimit struct {
	Value DataLimit
	Set   bool
}

// IsSet returns true if OptDataLimit was set.
func (o OptDataLimit) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDataLimit) Reset() {
	var v DataLimit
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDataLimit) SetTo(v DataLimit) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDataLimit) Get() (v DataLimit, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDataLimit) Or(d DataLimit) DataLimit {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt returns new OptInt with value set to v.
func NewOptInt(v int) OptInt {
	return OptInt{
		Value: v,
		Set:   true,
	}
}

// OptInt is optional int.
type OptInt struct {
	Value int
	Set   bool
}

// IsSet returns true if OptInt was set.
func (o OptInt) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt) Reset() {
	var v int
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt) SetTo(v int) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt) Get() (v int, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt) Or(d int) int {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMetricsTransferGetOKBytesTransferredByUserId returns new OptMetricsTransferGetOKBytesTransferredByUserId with value set to v.
func NewOptMetricsTransferGetOKBytesTransferredByUserId(v MetricsTransferGetOKBytesTransferredByUserId) OptMetricsTransferGetOKBytesTransferredByUserId {
	return OptMetricsTransferGetOKBytesTransferredByUserId{
		Value: v,
		Set:   true,
	}
}

// OptMetricsTransferGetOKBytesTransferredByUserId is optional MetricsTransferGetOKBytesTransferredByUserId.
type OptMetricsTransferGetOKBytesTransferredByUserId struct {
	Value MetricsTransferGetOKBytesTransferredByUserId
	Set   bool
}

// IsSet returns true if OptMetricsTransferGetOKBytesTransferredByUserId was set.
func (o OptMetricsTransferGetOKBytesTransferredByUserId) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMetricsTransferGetOKBytesTransferredByUserId) Reset() {
	var v MetricsTransferGetOKBytesTransferredByUserId
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMetricsTransferGetOKBytesTransferredByUserId) SetTo(v MetricsTransferGetOKBytesTransferredByUserId) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMetricsTransferGetOKBytesTransferredByUserId) Get() (v MetricsTransferGetOKBytesTransferredByUserId, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMetricsTransferGetOKBytesTransferredByUserId) Or(d MetricsTransferGetOKBytesTransferredByUserId) MetricsTransferGetOKBytesTransferredByUserId {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/Server
type Server struct {
	Name                 OptString  `json:"name"`
	ServerId             OptString  `json:"serverId"`
	MetricsEnabled       OptBool    `json:"metricsEnabled"`
	CreatedTimestampMs   OptFloat64 `json:"createdTimestampMs"`
	PortForNewAccessKeys OptInt     `json:"portForNewAccessKeys"`
}

// GetName returns the value of Name.
func (s *Server) GetName() OptString {
	return s.Name
}

// GetServerId returns the value of ServerId.
func (s *Server) GetServerId() OptString {
	return s.ServerId
}

// GetMetricsEnabled returns the value of MetricsEnabled.
func (s *Server) GetMetricsEnabled() OptBool {
	return s.MetricsEnabled
}

// GetCreatedTimestampMs returns the value of CreatedTimestampMs.
func (s *Server) GetCreatedTimestampMs() OptFloat64 {
	return s.CreatedTimestampMs
}

// GetPortForNewAccessKeys returns the value of PortForNewAccessKeys.
func (s *Server) GetPortForNewAccessKeys() OptInt {
	return s.PortForNewAccessKeys
}

// SetName sets the value of Name.
func (s *Server) SetName(val OptString) {
	s.Name = val
}

// SetServerId sets the value of ServerId.
func (s *Server) SetServerId(val OptString) {
	s.ServerId = val
}

// SetMetricsEnabled sets the value of MetricsEnabled.
func (s *Server) SetMetricsEnabled(val OptBool) {
	s.MetricsEnabled = val
}

// SetCreatedTimestampMs sets the value of CreatedTimestampMs.
func (s *Server) SetCreatedTimestampMs(val OptFloat64) {
	s.CreatedTimestampMs = val
}

// SetPortForNewAccessKeys sets the value of PortForNewAccessKeys.
func (s *Server) SetPortForNewAccessKeys(val OptInt) {
	s.PortForNewAccessKeys = val
}

// ServerAccessKeyDataLimitDeleteNoContent is response for ServerAccessKeyDataLimitDelete operation.
type ServerAccessKeyDataLimitDeleteNoContent struct{}

// ServerAccessKeyDataLimitPutBadRequest is response for ServerAccessKeyDataLimitPut operation.
type ServerAccessKeyDataLimitPutBadRequest struct{}

func (*ServerAccessKeyDataLimitPutBadRequest) serverAccessKeyDataLimitPutRes() {}

// ServerAccessKeyDataLimitPutNoContent is response for ServerAccessKeyDataLimitPut operation.
type ServerAccessKeyDataLimitPutNoContent struct{}

func (*ServerAccessKeyDataLimitPutNoContent) serverAccessKeyDataLimitPutRes() {}

// ServerHostnameForAccessKeysPutBadRequest is response for ServerHostnameForAccessKeysPut operation.
type ServerHostnameForAccessKeysPutBadRequest struct{}

func (*ServerHostnameForAccessKeysPutBadRequest) serverHostnameForAccessKeysPutRes() {}

// ServerHostnameForAccessKeysPutInternalServerError is response for ServerHostnameForAccessKeysPut operation.
type ServerHostnameForAccessKeysPutInternalServerError struct{}

func (*ServerHostnameForAccessKeysPutInternalServerError) serverHostnameForAccessKeysPutRes() {}

// ServerHostnameForAccessKeysPutNoContent is response for ServerHostnameForAccessKeysPut operation.
type ServerHostnameForAccessKeysPutNoContent struct{}

func (*ServerHostnameForAccessKeysPutNoContent) serverHostnameForAccessKeysPutRes() {}

type ServerHostnameForAccessKeysPutReq struct {
	Hostname OptString `json:"hostname"`
}

// GetHostname returns the value of Hostname.
func (s *ServerHostnameForAccessKeysPutReq) GetHostname() OptString {
	return s.Hostname
}

// SetHostname sets the value of Hostname.
func (s *ServerHostnameForAccessKeysPutReq) SetHostname(val OptString) {
	s.Hostname = val
}

// ServerPortForNewAccessKeysPutBadRequest is response for ServerPortForNewAccessKeysPut operation.
type ServerPortForNewAccessKeysPutBadRequest struct{}

func (*ServerPortForNewAccessKeysPutBadRequest) serverPortForNewAccessKeysPutRes() {}

// ServerPortForNewAccessKeysPutConflict is response for ServerPortForNewAccessKeysPut operation.
type ServerPortForNewAccessKeysPutConflict struct{}

func (*ServerPortForNewAccessKeysPutConflict) serverPortForNewAccessKeysPutRes() {}

// ServerPortForNewAccessKeysPutNoContent is response for ServerPortForNewAccessKeysPut operation.
type ServerPortForNewAccessKeysPutNoContent struct{}

func (*ServerPortForNewAccessKeysPutNoContent) serverPortForNewAccessKeysPutRes() {}

type ServerPortForNewAccessKeysPutReq struct {
	Port OptFloat64 `json:"port"`
}

// GetPort returns the value of Port.
func (s *ServerPortForNewAccessKeysPutReq) GetPort() OptFloat64 {
	return s.Port
}

// SetPort sets the value of Port.
func (s *ServerPortForNewAccessKeysPutReq) SetPort(val OptFloat64) {
	s.Port = val
}
